<?xml version="1.0"?>

<!--
  ~ Energy readers and parsers toolkit
  ~ Copyright (C) 2019-2021 Niels Basjes
  ~
  ~ This work is licensed under the Creative Commons
  ~ Attribution-NonCommercial-NoDerivatives 4.0 International License.
  ~
  ~ You may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    https://creativecommons.org/licenses/by-nc-nd/4.0/
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an AS IS BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -->

<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>nl.basjes.energy</groupId>
  <artifactId>energy-parent</artifactId>
  <version>0.1-SNAPSHOT</version>

  <packaging>pom</packaging>

  <name>Energy : </name>
  <description>A library to read Modbus based energy systems.</description>

<!--  <prerequisites>-->
<!--    <maven>3.3</maven>-->
<!--  </prerequisites>-->

  <properties>
    <jdkLevel>1.8</jdkLevel>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- In order for everything to work correctly we need at least this version of maven. -->
    <maven.minimal.version>3.5.2</maven.minimal.version>

    <!-- https://github.com/steveohara/j2mod -->
    <j2mod.version>2.5.5</j2mod.version>
    <!-- ============================================== -->
    <!-- ================ UDF Versions ================ -->
    <!-- ============================================== -->
    <!-- Apache Flink -->
<!--
    <flink.version>1.8.1</flink.version>
    <flink.scala.version>2.11</flink.scala.version>
-->
    <!-- Apache Beam -->
<!--
    <beam.version>2.13.0</beam.version>
-->
    <!-- Apache Nifi -->
    <nifi.version>1.15.3</nifi.version>

    <!-- ============================================== -->

    <checkstyle-plugin.version>3.1.2</checkstyle-plugin.version>
    <checkstyle.version>9.3</checkstyle.version>
    <slf4j.version>1.7.35</slf4j.version>
    <rat.version>0.13</rat.version>
    <jacoco.version>0.8.7</jacoco.version>
    <junit5.version>5.8.2</junit5.version>

    <!-- See http://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html-->
    <jacoco.surefireArgLine/>
    <argLine>@{jacoco.surefireArgLine} -Xmx2048m</argLine>

    <sonar.language>java</sonar.language>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

    <git-commit-id-plugin.version>5.0.0</git-commit-id-plugin.version>
    <version.copyright>Copyright (C) 2019-2021 Niels Basjes</version.copyright>
    <version.license>Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.</version.license>
    <version.url>${project.url}</version.url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>packageForRelease</id>
      <build>
        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.0.1</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!-- explicitly define maven-deploy-plugin after other to force exec order -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.2</version>
            <executions>
              <execution>
                <id>deploy</id>
                <phase>deploy</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!-- Description: https://github.com/git-commit-id/git-commit-id-maven-plugin -->
            <groupId>io.github.git-commit-id</groupId>
            <artifactId>git-commit-id-maven-plugin</artifactId>
            <version>${git-commit-id-plugin.version}</version>
            <executions>
              <execution>
                <id>Validate-Revision-Information</id>
                <phase>validate</phase>
                <goals>
                  <goal>validateRevision</goal>
                </goals>
                <configuration>
                  <validationProperties>
                    <!-- verify that the current repository is not dirty -->
                    <validationProperty>
                      <name>Don't try to release if something has not yet been committed.</name>
                      <value>${git.dirty}</value>
                      <shouldMatchTo>false</shouldMatchTo>
                    </validationProperty>
                  </validationProperties>
                  <validationShouldFailIfNoMatch>true</validationShouldFailIfNoMatch>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <!-- Description: https://github.com/git-commit-id/git-commit-id-maven-plugin -->
            <groupId>io.github.git-commit-id</groupId>
            <artifactId>git-commit-id-maven-plugin</artifactId>
            <version>${git-commit-id-plugin.version}</version>
            <executions>
              <execution>
                <id>Validate-Revision-Information</id>
                <phase>validate</phase>
                <goals>
                  <goal>validateRevision</goal>
                </goals>
                <configuration>
                  <validationProperties>
                    <!-- verify that the current repository is not dirty -->
                    <validationProperty>
                      <name>Don't try to release if something has not yet been committed.</name>
                      <value>${git.dirty}</value>
                      <shouldMatchTo>false</shouldMatchTo>
                    </validationProperty>
                    <!-- verify that the current commit has a tag -->
                    <validationProperty>
                      <name>validating current commit has a tag</name>
                      <value>${git.closest.tag.commit.count}</value>
                      <shouldMatchTo>0</shouldMatchTo>
                    </validationProperty>
                  </validationProperties>
                  <validationShouldFailIfNoMatch>true</validationShouldFailIfNoMatch>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>dependency-convergence</id>
                <phase>validate</phase>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <dependencyConvergence/>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>EnableReportPlugins</id>
      <activation>
        <property>
          <name>EnableReportPlugins</name>
        </property>
        <jdk>1.8</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>4.3.0</version>
            <configuration>
              <timestampFormat>EpochMillis</timestampFormat>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>SkipSonarBecauseItWasNotConfigured</id>
      <activation>
        <property>
          <name>!env.SONAR_TOKEN</name>
        </property>
      </activation>
      <properties>
        <sonar.skip>true</sonar.skip>
      </properties>
    </profile>

    <profile>
      <id>Build with JDK 8</id>
      <activation>
        <jdk>1.8</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.9.0</version>
            <configuration>
              <compilerVersion>${jdkLevel}</compilerVersion>
              <source>${jdkLevel}</source>
              <target>${jdkLevel}</target>
              <compilerArgs>
                <!-- Enable almost all warnings.-->
                <!-- Ignore the 'serial' warnings about not having a serialVersionUID -->
                <arg>-Xlint:all,-serial</arg>
                <arg>-Werror</arg>
              </compilerArgs>
              <showWarnings>true</showWarnings>
              <showDeprecation>true</showDeprecation>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>Build with JDK 11+</id>
      <activation>
        <jdk>[1.11,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.9.0</version>
            <configuration>
              <compilerVersion>${jdkLevel}</compilerVersion>
              <source>${jdkLevel}</source>
              <target>${jdkLevel}</target>
              <compilerArgs>
                <!-- Enable almost all warnings.-->
                <!-- Ignore the 'serial' warnings about not having a serialVersionUID -->
                <arg>-Xlint:all,-serial</arg>
                <arg>-Werror</arg>
                <arg>-implicit:class</arg>
              </compilerArgs>
              <showWarnings>true</showWarnings>
              <showDeprecation>true</showDeprecation>
              <release>8</release>
            </configuration>
          </plugin>

          <!-- Never run Coveralls under JDK 11 ... it won't work -->
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>4.3.0</version>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>


  </profiles>

  <build>
    <defaultGoal>clean package</defaultGoal>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>

      <plugin>
        <!-- Description: https://github.com/git-commit-id/git-commit-id-maven-plugin -->
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <version>${git-commit-id-plugin.version}</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <phase>validate</phase>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dateFormat>yyyy-MM-dd '@' HH:mm:ss z</dateFormat>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[11,)</version>
                  <message>Although the target JVM is JRE 8, the build MUST be done with JDK 11 or higher.</message>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[${maven.minimal.version},)</version>
                  <message>You must use a newer version of Maven</message>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>${rat.version}</version>
        <inherited>false</inherited>
        <!-- https://issues.apache.org/jira/browse/RAT-158 -->
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-core</artifactId>
            <version>1.11.1</version>
            <exclusions>
              <exclusion>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <addDefaultLicenseMatchers>false</addDefaultLicenseMatchers>
          <licenses>
            <license implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
              <licenseFamilyCategory>CC-BY-NC-ND</licenseFamilyCategory>
              <licenseFamilyName>Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International</licenseFamilyName>
              <notes></notes>
              <patterns>
                <pattern>Attribution-NonCommercial-NoDerivatives</pattern>
              </patterns>
            </license>
          </licenses>
          <licenseFamilies>
            <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
              <familyName>Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International</familyName>
            </licenseFamily>
          </licenseFamilies>
          <consoleOutput>true</consoleOutput>
          <excludeSubProjects>false</excludeSubProjects>
          <excludes>
            <!-- Version control files -->
            <exclude>**/.git/**</exclude>
            <exclude>**/.gitignore</exclude>
            <exclude>**/.gitmodules</exclude>
            <!-- IDE settings and files -->
            <exclude>**/.classpath</exclude>
            <exclude>**/.project</exclude>
            <exclude>**/.settings/**</exclude>
            <exclude>**/.idea/**</exclude>
            <exclude>**/*.iml</exclude>
            <exclude>*.patch</exclude>
            <exclude>*.diff</exclude>
            <!-- Documentation -->
            <exclude>src/**</exclude>
            <exclude>docs/**</exclude>
            <!-- Files that cannot be 'polluted' -->
            <exclude>CNAME</exclude>
            <exclude>.github/**</exclude>
            <exclude>*.json</exclude>
            <exclude>generate-sunspec-parser/src/main/resources/models/**</exclude>
            <exclude>**/*.csv</exclude>
            <!-- Test and demo input files -->
            <exclude>**/testfiles/**</exclude>
            <exclude>**/*.log</exclude>
            <exclude>**/examples/**/*.jar</exclude>
            <!-- File generated during build -->
            <exclude>**/target/**</exclude>
            <exclude>**/*.tokens</exclude>
            <exclude>**/dependency-reduced-pom.xml</exclude>
            <!-- Other files -->
            <exclude>ReleaseProcedure.txt</exclude>
            <exclude>benchmarks/*.txt</exclude>
            <exclude>benchmarks/*.csv</exclude>
            <exclude>analyzer/run-pitest.sh</exclude>
            <exclude>analyzer/pitest/</exclude>
            <exclude>**/.~lock.*</exclude>
            <exclude>docker/_m2/**</exclude>
            <exclude>docker/_gnupg/**</exclude>
            <!-- Test scripts -->
            <exclude>*.sh</exclude>
            <exclude>**/_*/**</exclude>
          </excludes>
        </configuration>
      </plugin>

    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>nl.basjes.energy</groupId>
              <artifactId>devtools</artifactId>
              <version>${project.version}</version>
            </dependency>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <consoleOutput>true</consoleOutput>
            <configLocation>checkstyle/checkstyle.xml</configLocation>
            <suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
          <!-- Runs by default in the verify phase  (mvn verify or later in the build cycle)
               the 'check' goal will fail the build if it does not pass.  "mvn checkstyle:check"
               will do this alone, or "mvn checkstyle:checkstyle" will report but not break  -->
          <executions>
            <execution>
              <id>checkstyle-check</id>
              <phase>test</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Coverage analysis for tests -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <!--
                Prepares the property pointing to the JaCoCo runtime agent which
                is passed as VM argument when Maven the Surefire plugin is executed.
            -->
            <execution>
              <id>pre-unit-test</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!--
                    Sets the name of the property containing the settings
                    for JaCoCo runtime agent.
                -->
                <propertyName>jacoco.surefireArgLine</propertyName>
              </configuration>
            </execution>
            <!--
                Ensures that the code coverage report for unit tests is created after
                unit tests have been run.
            -->
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.9.1.2184</version>
        </plugin>

        <plugin><artifactId>maven-clean-plugin</artifactId><version>3.1.0</version></plugin>
        <plugin><artifactId>maven-compiler-plugin</artifactId><version>3.9.0</version></plugin>
        <plugin><artifactId>maven-deploy-plugin</artifactId><version>3.0.0-M1</version></plugin>
        <plugin><artifactId>maven-install-plugin</artifactId><version>3.0.0-M1</version></plugin>
        <plugin><artifactId>maven-resources-plugin</artifactId><version>3.2.0</version></plugin>
        <plugin><artifactId>maven-site-plugin</artifactId><version>3.10.0</version></plugin>
        <plugin><artifactId>maven-surefire-plugin</artifactId><version>3.0.0-M5</version></plugin>
        <plugin><artifactId>maven-shade-plugin</artifactId><version>3.2.4</version></plugin>
        <plugin><artifactId>maven-jar-plugin</artifactId><version>3.2.2</version></plugin>
        <plugin><artifactId>maven-war-plugin</artifactId><version>3.3.2</version></plugin>
        <plugin><artifactId>maven-assembly-plugin</artifactId><version>3.3.0</version></plugin>

      </plugins>
    </pluginManagement>
  </build>

  <modules>
    <module>devtools</module>
    <module>generate-sunspec-parser</module>
    <module>modbus-parsers</module>
    <module>udfs</module>
  </modules>

  <url>https://energy.basjes.nl</url>

  <licenses>
    <license>
      <name>Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International</name>
      <url>https://creativecommons.org/licenses/by-nc-nd/4.0/</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Niels Basjes</name>
      <email>niels@basjes.nl</email>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>Europe/Amsterdam</timezone>
    </developer>
  </developers>

  <scm>
    <url>https://energy.basjes.nl</url>
    <connection>scm:git:https://github.com/nielsbasjes/energy.git</connection>
    <developerConnection>scm:git:.</developerConnection>
  </scm>

</project>
